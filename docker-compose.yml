---
networks:
  es-net:
    driver: bridge
services:
  create_certs:
    command: >
        bash -c '
          if [[ ! -f /certs/bundle.zip ]]; then
            bin/elasticsearch-certutil ca --silent --pem -out /certs/ca.zip;
            unzip /certs/ca.zip -d /certs;

            bin/elasticsearch-certutil cert --silent --pem --in config/certificates/instances.yml -out /certs/bundle.zip --ca-cert /certs/ca/ca.crt --ca-key /certs/ca/ca.key;
            unzip /certs/bundle.zip -d /certs;  fi; chown -R 1000:0 /certs '
    container_name: create_certs
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.3
    user: '0'
    volumes: ['certs:/certs', './certificates:/usr/share/elasticsearch/config/certificates']
    working_dir: /usr/share/elasticsearch
  kibana1:
    container_name: kibana1
    depends_on:
      node1:
        condition: service_healthy
      node2:
        condition: service_healthy
      node3:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    networks:
      - es-net
    ports:
      - '5601:5601'
    restart: always
    user: ${UID}:${GID}
    volumes:
      - ./kibana/kibana1.yml:/usr/share/kibana/config/kibana.yml
      - certs:/usr/share/kibana/config/certificates
  kibana2:
    container_name: kibana2
    depends_on:
      node4:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    networks:
      - es-net
    ports:
      - '5602:5602'
    restart: always
    user: ${UID}:${GID}
    volumes:
      - ./kibana/kibana2.yml:/usr/share/kibana/config/kibana.yml
      - certs:/usr/share/kibana/config/certificates
  metricbeat:
    command: ["--strict.perms=false", "-system.hostfs=/hostfs"]
    container_name: metricbeat
    depends_on:
      node1:
        condition: service_healthy
      node2:
        condition: service_healthy
      node3:
        condition: service_healthy
    deploy:
      mode: global
    image: docker.elastic.co/beats/metricbeat:${STACK_VERSION}
    networks:
      - es-net
    restart: always
    user: root
    volumes:
      - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
  node1:
    container_name: node1
    depends_on:
      create_certs:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          memory: 1g
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s -k -u elastic:nonprodpwd https://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    networks:
      - es-net
    ports:
      - '9200:9200'
    restart: always
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        hard: 65536
        soft: 65536
    user: ${UID}:${GID}
    volumes:
      - certs:/usr/share/elasticsearch/config/certificates
      - ./snapshots:/var/tmp/snapshots/
      - ./logs:/usr/share/elasticsearch/logs
      - ./elasticsearch/elasticsearch1.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  node2:
    container_name: node2
    depends_on:
      - create_certs
      - node1
    deploy:
      resources:
        limits:
          memory: 1g
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s -k -u elastic:nonprodpwd https://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    networks:
      - es-net
    restart: always
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        hard: 65536
        soft: 65536
    user: ${UID}:${GID}
    volumes:
      - certs:/usr/share/elasticsearch/config/certificates
      - ./snapshots:/var/tmp/snapshots/
      - ./elasticsearch/elasticsearch2.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  node3:
    container_name: node3
    depends_on:
      - create_certs
      - node2
    deploy:
      resources:
        limits:
          memory: 1g
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s -k -u elastic:nonprodpwd https://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    networks:
      - es-net
    restart: always
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        hard: 65536
        soft: 65536
    user: ${UID}:${GID}
    volumes:
      - certs:/usr/share/elasticsearch/config/certificates
      - ./snapshots:/var/tmp/snapshots/
      - ./elasticsearch/elasticsearch3.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  node4:
    container_name: node4
    depends_on:
      - create_certs
      - node2
    deploy:
      resources:
        limits:
          memory: 1g
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s -k -u elastic:nonprodpwd https://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    networks:
      - es-net
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        hard: 65536
        soft: 65536
    user: ${UID}:${GID}
    volumes:
      - certs:/usr/share/elasticsearch/config/certificates
      - ./snapshots:/var/tmp/snapshots/
      - ./elasticsearch/elasticsearch4.yml:/usr/share/elasticsearch/config/elasticsearch.yml
  node5:
    container_name: node5
    depends_on:
      - create_certs
    deploy:
      resources:
        limits:
          memory: 1g
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s -k -u elastic:nonprodpwd https://localhost:9204/_cluster/health | grep -vq '"status":"red"'
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    networks:
      - es-net
    ports:
      - '9304:9304'
      - '9204:9204'
    restart: always
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        hard: 65536
        soft: 65536
    user: ${UID}:${GID}
    volumes:
      - certs:/usr/share/elasticsearch/config/certificates
      - ./elasticsearch/elasticsearch5.yml:/usr/share/elasticsearch/config/elasticsearch.yml
volumes:
  certs: null
  snapshots: null